<?php

namespace StarkBank;
use StarkBank\Utils\Rest;
use StarkCore\Utils\Checks;
use StarkCore\Utils\Resource;


class CorporateBalance extends Resource
{

    public $amount;
    public $limit;
    public $maxLimit;
    public $currency;
    public $updated;

    /**
    # CorporateBalance object

    The CorporateBalance object displays the current corporate balance of the Workspace,
    which is the result of the sum of all transactions within this
    Workspace. The balance is never generated by the user, but it
    can be retrieved to see the available information.

    ## Attributes (return-only):
        - id [string]: unique id returned when CorporateBalance is created. ex: "5656565656565656"
        - amount [integer]: current corporate balance amount of the workspace in cents. ex: 200 (= R$ 2.00)
        - limit [integer]: The maximum negative balance allowed by the user. ex: 10000 (= R$ 100.00)
        - maxLimit [integer]: The maximum negative balance allowed by StarkBank. ex: 100000 (= R$ 1000.00)
        - currency [string]: currency of the current workspace. Expect others to be added eventually. ex: "BRL"
        - updated [DateTime]: update datetime for the CorporateBalance. 
     */
    function __construct(array $params)
    {
        parent::__construct($params);

        $this->amount = Checks::checkParam($params, "amount");
        $this->limit = Checks::checkParam($params, "limit");
        $this->maxLimit = Checks::checkParam($params, "maxLimit");
        $this->currency = Checks::checkParam($params, "currency");
        $this->updated = Checks::checkDateTime(Checks::checkParam($params, "updated"));

        Checks::checkParams($params);
    }

    /**
    # Retrieve the CorporateBalance object

    Receive the CorporateBalance object linked to your workspace in the Stark Bank API

    ## Parameters (optional):
        - user [Organization/Project object, default null]: Organization or Project object. Not necessary if StarkBank\Settings::setUser() was used before function call

    ## Return:
        - CorporateBalance object with updated attributes
     */
    public static function get($user = null)
    {
        return Rest::getList($user, CorporateBalance::resource())->current();
    }

    private static function resource()
    {
        $balance = function ($array) {
            return new CorporateBalance($array);
        };
        return [
            "name" => "CorporateBalance",
            "maker" => $balance,
        ];
    }
}
